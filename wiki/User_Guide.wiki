#summary This guide provides information useful for installing and using the toolkit.
#labels Phase-Implementation

= Prerequisite Software =
To install the toolkit locally on your machine you will need the following software.
  * Java Development Kit, the software was tested with jdk1.6.0_05.
  * [http://tomcat.apache.org Tomcat Apache] used as a container for the Data Access Web Application, the toolkit was tested with Tomcat 6.0. In the following we refer to the directory in which Tomcat is deployed by _TOMCAT_HOME_.
  * The [http://exist.sourceforge.net eXist database system] for storing captured experiments, the toolkit was tested with eXist 1.2.0.
  * The [http://sourceforge.net/projects/pedro PEDRo data capture tool]. In the following we use _PEDRo_HOME_ to refer to the directory in which PEDRo is deployed.
----

= Installing the Toolkit =
The following presents the steps for installing the toolkit.
  * Download the _FuGEToolkit.zip_ file from the download web page.
  * Unzip the file into a directory of your choice. You will find the following files as a result: _proteomics.war_, _namespacemodifier.jar_ and a directory named _ PedroModels _.
  * Deploy the PEDRo models by putting the sub-directories of the _ PedroModels _ directory into _PEDRo_HOME/models_. The PedroModels directory contains two models: _GelML_ and _spML_.
  * Deploy the data access web application, _proteomics.war_, in the Tomcat container. This can be done by moving the _proteomics.war_ file into the directory _TOMCAT_HOME/webapps_. The Tomcat container will automatically deploy the web application.
  * Before you can use the data access web application, you will need to edit the file _TOMCAT_HOME/webapps/proteomics/WEB-INF/web.xml_ to set information necessary to access the eXist database. Specifically the values of the following parameters may need to be edited according to your settings: _dbDriver_, the driver used for accessing the eXist database, you will not need to change the value of this parameter unless you opt for an XML database server other than eXist; _dbServerName_, this is the URL of the eXist server, e.g., _exist://localhost:8680/exist/xmlrpc/_; _dbCollectionName_ the name of the collection that will be accessed, e.g., _proteomics_; _username_ and _password_ are respectively the user name and the password needed for accessing the collection at the eXist database server.
----

= Capturing and Sharing GelML data =

To capture GelML data you can use PEDRo data capture tool. For more information about the use of the PEDRo tool, users are referred to the [http://pedro.cs.manchester.ac.uk/ PEDRo web site]. It is worth noting that the Pedro models for GelML and spML come with a plug-in for facilitating the capture of references within experiments. Indeed, there may be several cross-references between the elements of a GelML or spML experiments, e.g., the attribute _Software_ref_ of the element Provider has as a value the identifier of a _Software_ element. Manually specifying these references can be time consuming: the user will have to fetch the referenced elements within the experiment. The plug-in we developed aims to facilitate this task; it automatically fetches the identifiers of the referenced elements within the GelML experiment and displays them as a drop down list. The user may then choose an item from the list to be used as a value. For example, Figure 1 illustrates the drop down list displayed by the plugin and which contains the items that can be used as a value for the _Software_ref_ attribute of the Provider element. 

http://www.cs.man.ac.uk/~khalidb/FuGEDataCaptureAndSharingToolkit/style/plugin.PNG
Figure 1: PEDRo plug-in for editing cross references in a GelML experiment.

Once you finished editing a GelML experiment you can export it as an XML document (A documentation on the use of the eXist database can be found [http://exist.sourceforge.net/quickstart.html here]). Exported XML documents can be then stored within the eXist database. Before doing so, users will need to use the tool namespacemodifier.jar that come with the toolkit. This tool is used to convert the namespace of certain elements in the XML document exported by PEDRo to make it a valid FuGE XML document. The following command line shows how the tool can be used.

_java -jar namespacemodifier.jar fuge.xsd experiment.xml fugeexperiment.xml_

_fuge.xsd_ is the XML Schema of the FuGE model, _experiment.xml_ is the XML document exported using the PEDRo tool and the _fugeexperiment_ is the XML Document output by this command and which is a FuGE compliant experiment.

Using the Data Access Web Application, the user can browse the experiments s/he captures. If your Tomcat is deployed locally on your machine on the port "8080", then you can visit the web page for browsing GelML experiments at http://localhost:8080/proteomics/index.jsp?application=Fuge%20Proteome%20Database&directory=Browse Gel%20Data&file=index.jsp. This web page contains a set of pre-defined canned queries (see Figure 2). 

http://www.cs.man.ac.uk/~khalidb/FuGEDataCaptureAndSharingToolkit/style/queries_screenshot.PNG
Figure 2: Canned queries provided for browsing GelML Experiments.

Using these queries users can retrieve: (i) general information regarding the conditions under which gel experiments were performed; (ii) information about gel locations (a.k.a. spots or bands), e.g., the user may request information about the gel locations that were detected in a given gel; and (iii) information about gels, e.g., Figure 3 shows the results returned when requesting information about available gels. 

http://www.cs.man.ac.uk/~khalidb/FuGEDataCaptureAndSharingToolkit/style/results_screenshot.PNG
Figure 3: Screenshot of the web page used for browsing GelML Experiments.
----

= Using the toolkit to capture and share data in your own FuGE extension (for advanced users) =

You can use the toolkit for capturing and browsing experiments that are specified in your own FuGE extension, just like we did with GelML. For this, you will first need to specify the XML Schema of your FuGE extension. Using this XML Schema you can create a PEDRo model as described [http://pedrodownload.man.ac.uk/PedroTutorials/MainTutorial.html here]. You then need to specify XQuery queries for browsing the experiments specified according to that model. The obtained XQuery are to be embed in JSP files. Examples of JSP files that include XQuery queries are supplied for GelML at _TOMCAT_HOME/webapps/proteomics/Fuge Proteome Database/Browse Gel Data_. You can use these files as templates for specifying you own canned queries.

If you have a query regarding the use of the toolkit then please feel free to contact [mailto:Khalid.Belhajjame@manchester.ac.uk Khalid Belhajjame]. 

